<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	<context:annotation-config />
	<context:component-scan base-package="iscas">
		<context:include-filter type="annotation" expression="org.aspectj.lang.annotation.Aspect"></context:include-filter>
	</context:component-scan>
	
	<import resource="beansContext.xml"/>
	
	<!-- 用户授权/认证信息Cache, 缓存管理器使用Ehcache实现 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml"/>
	</bean>
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- Single realm app.  If you have multiple realms, use the 'realms' property instead. -->
		<property name="realm" ref="shiroDbRealm" />
		<property name="cacheManager" ref="cacheManager" />
	</bean>
	
	<!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="iscas.credentials.RetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="cacheManager"/>
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>

	<!-- Define the realm you want to use to connect to your back-end security datasource: -->
	<bean id="shiroDbRealm" class="iscas.realm.ShiroDbRealm">
	    <property name="userService" ref="userService"/>
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>
	
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login.jsp" /> <!-- 没有权限或者失败后跳转的页面 -->
		<property name="successUrl" value="/index.html" />
		<property name="unauthorizedUrl" value="/unauthorized.html"/> 
		<property name="filterChainDefinitions">
			<value>
			 	/login.jsp = authc
				/index.jsp = user
				/ = user
				/profile.jsp = user
				/province.jsp = user
				/compare.jsp = user
				/*.jsp = user
				/searchByName.action* = user
				/searchById.action* = user
				/searchByProvince.action* = user
				/find*.action = user
				/delete.action* = user, roles[admin]
				/updateLevel.action* = user, roles[admin]
				/edit.html = user, roles[admin]
				/logout.action = logout
				/images/** = anon
				/css/** = anon
				/js/** = anon
				/fonts/** = anon
			</value>
		</property>
	</bean>
	
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<!-- AOP式方法级权限检查 -->
	<!-- Enable Shiro Annotations for Spring-configured beans.  Only run after -->
	<!-- the lifecycleBeanProcessor has run: -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		 <property name="proxyTargetClass" value="true" />   
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
	    <property name="securityManager" ref="securityManager"/>
	</bean>
</beans>